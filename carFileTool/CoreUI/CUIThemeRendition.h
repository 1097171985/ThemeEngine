//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//


#import "CUIThemeGradient.h"
#import "CUIShapeEffectPreset.h"

// 0x143545349 â€“ first few bytes of every file
struct _csiheader {
    unsigned int prefix; // ISTC
    unsigned int pad; // always 1
    struct {
        unsigned int isHeaderFlaggedFPO:1;
        unsigned int isExcludedFromContrastFilter:1;
        unsigned int isVectorBased:1;
        unsigned int isOpaque:1;
        unsigned int reserved:28;
    } renditionFlags;
    unsigned int width;
    unsigned int height;
    unsigned int scaleFactor; // scale * 100. 100 is 1x, 200 is 2x, etc.
    unsigned int pixelFormat; // 'ARGB' ('BGRA' in little endian), if it is 0x47413820 (GA8) then the colorspace will be gray or 'PDF ' if a pdf
    unsigned int colorspaceID:4; // colorspace ID. 0 for sRGB, all else for generic rgb, used only if pixelFormat 'ARGB'
    unsigned int reserved:28;
    struct _csimetadata {
        unsigned int modDate;  // modification date in seconds since 1970
        unsigned short layout; // layout of the image, can be 1(0?)-30
        unsigned short reserved; // always zero
        char name[128];
    } metadata;
    unsigned int listLength; // size of the list of information after header but before bitmap
    struct _csibitmaplist {
        unsigned int bitmapCount;
        unsigned int reserved;
        unsigned int payloadSize; // size of all the proceeding information listLength + data
        unsigned int contextList[0];
    } bitmaps;
};

/*
 The last few ints are
 metadatalength
 bitmapcount (i've only seen 1)
 reserved (always zero)
 size of payload
 
 I know know why it has a last object with variable length in the struct from the class dump
 */
/*
 Template rending modes change the rending flags

 // *(int8_t *)(r12 + 0x8) is the pointer to the int8_t of rendering flags
 r12 = header;
 rax = templateRenderingMode;
 if (rax == 0x2) {

     *(int8_t *)(r12 + 0x8) = *(int8_t *)(r12 + 0x8) | 0x10;
 } else {
     if (rax == 0x1) {
         *(int8_t *)(r12 + 0x8) = *(int8_t *)(r12 + 0x8) | 0x8;
     }
 }
 
 */

@class CUIImage;

__attribute__((visibility("hidden")))
@interface CUIThemeRendition : NSObject
{
    struct _renditionkeytoken _stackKey[16];
    struct _renditionkeytoken *_key;
    long long _type;
    unsigned int _subtype;
    unsigned int _scale;
    struct {
        unsigned int isHeaderFlaggedFPO:1;
        unsigned int isExcludedFromContrastFilter:1;
        unsigned int isVectorBased:1;
        unsigned int isOpaque:1;
        unsigned int reserved:28;
    } _renditionFlags;
    long long _templateRenderingMode;
    long long _artworkStatus;
    unsigned long long _colorSpaceID;
    NSString *_name;
    NSData *_srcData;
    long long _validLookGradation;
    double _opacity;
    int _blendMode;
    NSString *_utiType;
    int _exifOrientation;
}

+ (NSString *)displayNameForRenditionType:(long long)arg1;
+ (id)filteredCSIDataFromBaseCSIData:(id)arg1;
+ (Class)renditionClassForRenditionType:(long long)arg1 andPixelFormat:(unsigned int)arg2;
@property(nonatomic) int exifOrientation; // @synthesize exifOrientation=_exifOrientation;
@property(nonatomic) int blendMode; // @synthesize blendMode=_blendMode;
@property(nonatomic) double opacity; // @synthesize opacity=_opacity;
- (unsigned short)valueForTokenIdentifier:(unsigned short)arg1;
- (NSData *)data;
- (struct CGPDFDocument *)pdfDocument;
- (CUIShapeEffectPreset *)effectPreset;
- (unsigned int)subtype;
- (unsigned int)gradientStyle;
- (CUIThemeGradient *)gradient;
- (double)gradientDrawingAngle;
- (BOOL)isScaled;
- (BOOL)isTiled;
- (id)sliceInformation;
- (NSArray *)metrics;
- (double)scale;
- (CUIImage *)maskForSliceIndex:(long long)arg1;
- (CUIImage *)imageForSliceIndex:(long long)arg1;
- (struct CGImage *)unslicedImage;
- (NSString *)description;
- (BOOL)isValidForLookGradation:(long long)arg1;
- (unsigned long long)colorSpaceID;
- (long long)artworkStatus;
- (long long)templateRenderingMode;
- (BOOL)isOpaque;
- (BOOL)isVectorBased;
- (BOOL)isHeaderFlaggedFPO;
- (NSString *)utiType;
- (NSString *)name;
- (CoreThemeType)type;
- (const struct _renditionkeytoken *)key;
- (void)dealloc;
- (id)_initWithCSIData:(id)arg1 forKey:(const struct _renditionkeytoken *)arg2 artworkStatus:(long long)arg3;
- (id)initWithCSIData:(id)arg1 forKey:(const struct _renditionkeytoken *)arg2 artworkStatus:(long long)arg3;
- (id)initWithCSIData:(id)arg1 forKey:(const struct _renditionkeytoken *)arg2;
- (void)_initializeRenditionKey:(const struct _renditionkeytoken *)arg1;
- (id)_initWithCSIHeader:(const struct _csiheader *)arg1;
- (void)_initalizeMetadataFromCSIData:(const struct _csiheader *)arg1;
- (void)_initializeCompositingOptionsFromCSIData:(const struct _csiheader *)arg1;
- (void)_initializeTypeIdentifiersWithLayout:(unsigned short)arg1;

@end

